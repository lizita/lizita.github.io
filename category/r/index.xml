<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | Liz McConnell</title>
    <link>/category/r/</link>
      <atom:link href="/category/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Liz McConnell © 2020</copyright><lastBuildDate>Sat, 11 Jul 2020 21:13:14 -0500</lastBuildDate>
    <image>
      <url>/images/icon_hu06d963f22cc5d003786a3f474238bf81_14484_512x512_fill_lanczos_center_2.png</url>
      <title>R</title>
      <link>/category/r/</link>
    </image>
    
    <item>
      <title>USGS Data Retrieval</title>
      <link>/post/usgs/</link>
      <pubDate>Sat, 11 Jul 2020 21:13:14 -0500</pubDate>
      <guid>/post/usgs/</guid>
      <description>


&lt;p&gt;It took me a few times to get this right - the interface of the USGS website is a rabbit hole of buttons and options for data retrieval. It’s not so hard to get the data you’re interested in, but pay close attention because it’s easy to do the wrong thing. Probably the easiest way is to use the &lt;code&gt;dataRetrieval&lt;/code&gt; &lt;a href=&#34;https://cran.r-project.org/web/packages/dataRetrieval/vignettes/dataRetrieval.html&#34;&gt;package&lt;/a&gt;. The last commits on their &lt;a href=&#34;https://github.com/USGS-R/dataRetrieval&#34;&gt;github&lt;/a&gt; are from 2 months ago, so it’s pretty up-to-date.&lt;/p&gt;
&lt;p&gt;To use this package, you need to know a few things about the structure of the data. Each USGS streamflow station has a number - you’ll need to know the number for the station you want. There’s also a number associated with each measured value; &lt;code&gt;00060&lt;/code&gt; for discharge in feet per second, &lt;code&gt;00065&lt;/code&gt; for gauge height in feet, &lt;code&gt;00010&lt;/code&gt; for temperature in degrees celcius, and many more. The last critical thing to know is the date range of the data you’re interested in.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Station Number&lt;/li&gt;
&lt;li&gt;Parameter Code&lt;/li&gt;
&lt;li&gt;Date Range of Interest&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here’s an example from the documentation:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#install.packages(&amp;quot;dataRetrieval&amp;quot;) #uncomment to install the package
library(dataRetrieval)
# Choptank River near Greensboro, MD:
siteNumber &amp;lt;- &amp;quot;01491000&amp;quot;
parameterCd &amp;lt;- &amp;quot;00060&amp;quot;  # Discharge
startDate &amp;lt;- &amp;quot;2009-10-01&amp;quot;  
endDate &amp;lt;- &amp;quot;2012-09-30&amp;quot; 

discharge &amp;lt;- readNWISdv(siteNumber, 
                    parameterCd, startDate, endDate)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here’s what the resulting data frame looks like:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;discharge.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The fifth column is a quality code - A stands for approved for release by the USGS.&lt;/p&gt;
&lt;p&gt;Another notable argument to the &lt;code&gt;readNWISdv&lt;/code&gt; function is &lt;code&gt;statCd&lt;/code&gt;. This allows you to request daily data and specify the statistic used. For example, you can request the daily maximum, mean, median, or total.&lt;/p&gt;
&lt;p&gt;Pretty simple, right?&lt;/p&gt;
&lt;p&gt;There are some other handy functions and options in this library. You’ll notice that the colunm names aren’t really descriptive of the data. You can use another function from the package to rename them. Try this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;discharge &amp;lt;- renameNWISColumns(discharge)
names(discharge)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;agency_cd&amp;quot; &amp;quot;site_no&amp;quot;   &amp;quot;Date&amp;quot;      &amp;quot;Flow&amp;quot;      &amp;quot;Flow_cd&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That can clean things up a lot - especially if you’re importing many parameters.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
ggplot(discharge, aes(x=Date, y=Flow)) + geom_point(alpha = 0.4)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/USGS/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;What I am interested is the streamflow data, so this is as far as I need to go. You can also import different kinds of USGS data using other functions of the same package. It’s a treasure trove! Check out the &lt;a href=&#34;https://cran.r-project.org/web/packages/dataRetrieval/vignettes/dataRetrieval.html&#34;&gt;documentation&lt;/a&gt; to get the full scope of it’s powers.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;I also came across another package called &lt;code&gt;waterData&lt;/code&gt; that can do the same retrieval and maybe some more analysis on the data. I haven’t looked further into this, but the last commits to their &lt;a href=&#34;https://github.com/USGS-R/waterData&#34;&gt;github&lt;/a&gt; are from 3 years ago, so I choose the &lt;code&gt;dataRetrieval&lt;/code&gt; package.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Now I’ll let you in on the less fun bit, which is the way I originally tried to download the data locally then upload to R. I started out fumbling around the website trying to find the gauge closests to the site I’m interested in. There’s an interactive map on the &lt;a href=&#34;https://waterdata.usgs.gov/nwis/rt&#34;&gt;homepage&lt;/a&gt;; you click on a state to get to a more refined map and click around some more to find the gauge you want.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;map.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You get to a really promising page that gives you some options to select parameters, a date range, and whether you want the output to be a graph, table, or tab-seperated format. This looks good, but is not.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;options.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I chose the tab-seperated option; After a lengthy wait a new tab with the output opened in the browser - so no file download. I guess I could have copied and pasted all of that into a text file, but I decided to search for a way to actually download the file.&lt;/p&gt;
&lt;p&gt;I found a &lt;a href=&#34;https://help.waterdata.usgs.gov/tutorials/overview/a-primer-on-downloading-data&#34;&gt;USGS primer on dowloading data&lt;/a&gt;, which took some differnet turns than the path I took previoulsy. The user interface is difficult to navigate and not intuitive, but it’s a great resource for data. I won’t go through the whole process, because it’s mostly just clicking on the right spot and choosing your desired options, but here is the most important part:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;savetofile.png&#34; /&gt;
There are still extra steps of choosing the options in the website, downloading the data, then reading it into R. This is the code I used to read the data once I had downloaded it as a text file and renamed it “streamflow”. If I were to go back, I would &lt;em&gt;not&lt;/em&gt; do it this way, but I guess it doesn’t require downloading a new package and is fine if you’re not dowloading a lot of data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

streamflow &amp;lt;- read.table(&amp;quot;streamflow&amp;quot;, skip = 32) #the first 32 lines are metadata

colnames(streamflow) &amp;lt;- c(&amp;quot;agency&amp;quot;, &amp;quot;site_no&amp;quot;, &amp;quot;date&amp;quot;, &amp;quot;time&amp;quot;, &amp;quot;timezone&amp;quot;, &amp;quot;Flow&amp;quot;, &amp;quot;quality_code&amp;quot;)
#discharge is in cubic feet per second, quality code A means approved 

streamflow$date &amp;lt;- as.Date(streamflow$date)

ggplot(streamflow, aes(x=date, y=Flow)) + geom_point(alpha=0.4)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/USGS/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Hope this info helps you avoid wasting time like I did on my first try! Do you know of a better way to get the data into R? Did you encounter any pitfalls?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mining Data from California&#39;s Geotracker Database</title>
      <link>/post/geotracker/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/geotracker/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://geotracker.waterboards.ca.gov/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Geotracker&lt;/a&gt; is a public database that is used to store environmental data from regulated sites in California. I&amp;rsquo;m going to download some data of a contaminated site and clean it up to try to derive some insights about the site. I picked Alpine county because it is the least populated one and I want to work with a smaller file. Some of the more industrial counties can have thousands of sites.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;URL &amp;lt;- &amp;quot;https://geotracker.waterboards.ca.gov/data_download/edf_by_county/AlpineEDF.zip&amp;quot;
download.file(URL, destfile=&#39;alpine.zip&#39;, method=&#39;curl&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After downloading the zipped file I need to unzip it and read in the .txt file. Let&amp;rsquo;s see what&amp;rsquo;s inside.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;unzip(&#39;alpine.zip&#39;)
alpine &amp;lt;- read.delim(&amp;quot;AlpineEDF.txt&amp;quot;)
head(alpine)
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;A data.frame: 6 × 23&lt;/caption&gt;
&lt;thead&gt;
	&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th scope=col&gt;COUNTY&lt;/th&gt;&lt;th scope=col&gt;GLOBAL_ID&lt;/th&gt;&lt;th scope=col&gt;FIELD_PT_NAME&lt;/th&gt;&lt;th scope=col&gt;LOGDATE&lt;/th&gt;&lt;th scope=col&gt;LOGTIME&lt;/th&gt;&lt;th scope=col&gt;LOGCODE&lt;/th&gt;&lt;th scope=col&gt;SAMPID&lt;/th&gt;&lt;th scope=col&gt;MATRIX&lt;/th&gt;&lt;th scope=col&gt;LABWO&lt;/th&gt;&lt;th scope=col&gt;LABCODE&lt;/th&gt;&lt;th scope=col&gt;⋯&lt;/th&gt;&lt;th scope=col&gt;ANADATE&lt;/th&gt;&lt;th scope=col&gt;BASIS&lt;/th&gt;&lt;th scope=col&gt;PARLABEL&lt;/th&gt;&lt;th scope=col&gt;PARVAL&lt;/th&gt;&lt;th scope=col&gt;PARVQ&lt;/th&gt;&lt;th scope=col&gt;LABDL&lt;/th&gt;&lt;th scope=col&gt;REPDL&lt;/th&gt;&lt;th scope=col&gt;UNITS&lt;/th&gt;&lt;th scope=col&gt;DILFAC&lt;/th&gt;&lt;th scope=col&gt;LNOTE&lt;/th&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;int&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;⋯&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;dbl&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;dbl&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;dbl&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;dbl&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
	&lt;tr&gt;&lt;th scope=row&gt;1&lt;/th&gt;&lt;td&gt;Alpine&lt;/td&gt;&lt;td&gt;T0600300005&lt;/td&gt;&lt;td&gt;K1     &lt;/td&gt;&lt;td&gt;2012-10-08&lt;/td&gt;&lt;td&gt;1110&lt;/td&gt;&lt;td&gt;CLSR&lt;/td&gt;&lt;td&gt;K1-15        &lt;/td&gt;&lt;td&gt;SO&lt;/td&gt;&lt;td&gt;CVJ0496&lt;/td&gt;&lt;td&gt;CLSR&lt;/td&gt;&lt;td&gt;⋯&lt;/td&gt;&lt;td&gt;2012-10-12&lt;/td&gt;&lt;td&gt;W&lt;/td&gt;&lt;td&gt;PHCD &lt;/td&gt;&lt;td&gt; 0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;0.033&lt;/td&gt;&lt;td&gt; 1.0&lt;/td&gt;&lt;td&gt;MG/KG&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;     &lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;2&lt;/th&gt;&lt;td&gt;Alpine&lt;/td&gt;&lt;td&gt;T0600300005&lt;/td&gt;&lt;td&gt;KMPUD#2&lt;/td&gt;&lt;td&gt;2008-12-30&lt;/td&gt;&lt;td&gt;1330&lt;/td&gt;&lt;td&gt;CLSR&lt;/td&gt;&lt;td&gt;KMPUD #2     &lt;/td&gt;&lt;td&gt;W &lt;/td&gt;&lt;td&gt;CSA0056&lt;/td&gt;&lt;td&gt;CLSR&lt;/td&gt;&lt;td&gt;⋯&lt;/td&gt;&lt;td&gt;2009-01-07&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;MOIL &lt;/td&gt;&lt;td&gt;79&lt;/td&gt;&lt;td&gt;= &lt;/td&gt;&lt;td&gt;9.100&lt;/td&gt;&lt;td&gt;50.0&lt;/td&gt;&lt;td&gt;UG/L &lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;DU,DU&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;3&lt;/th&gt;&lt;td&gt;Alpine&lt;/td&gt;&lt;td&gt;T0600300005&lt;/td&gt;&lt;td&gt;KMPUD#2&lt;/td&gt;&lt;td&gt;2002-04-16&lt;/td&gt;&lt;td&gt;1203&lt;/td&gt;&lt;td&gt;KFR &lt;/td&gt;&lt;td&gt;KMPUD #2     &lt;/td&gt;&lt;td&gt;WX&lt;/td&gt;&lt;td&gt;NA     &lt;/td&gt;&lt;td&gt;ALPS&lt;/td&gt;&lt;td&gt;⋯&lt;/td&gt;&lt;td&gt;2002-04-18&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;MTBE &lt;/td&gt;&lt;td&gt; 0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;0.250&lt;/td&gt;&lt;td&gt; 0.5&lt;/td&gt;&lt;td&gt;UG/L &lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;     &lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;4&lt;/th&gt;&lt;td&gt;Alpine&lt;/td&gt;&lt;td&gt;T0600300005&lt;/td&gt;&lt;td&gt;KMPUD#2&lt;/td&gt;&lt;td&gt;2002-04-16&lt;/td&gt;&lt;td&gt;1203&lt;/td&gt;&lt;td&gt;KFR &lt;/td&gt;&lt;td&gt;KMPUD #2     &lt;/td&gt;&lt;td&gt;WX&lt;/td&gt;&lt;td&gt;NA     &lt;/td&gt;&lt;td&gt;ALPS&lt;/td&gt;&lt;td&gt;⋯&lt;/td&gt;&lt;td&gt;2002-04-18&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;BZME &lt;/td&gt;&lt;td&gt; 0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;0.250&lt;/td&gt;&lt;td&gt; 0.5&lt;/td&gt;&lt;td&gt;UG/L &lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;     &lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;5&lt;/th&gt;&lt;td&gt;Alpine&lt;/td&gt;&lt;td&gt;T0600300005&lt;/td&gt;&lt;td&gt;KMPUD#2&lt;/td&gt;&lt;td&gt;2002-10-31&lt;/td&gt;&lt;td&gt;1805&lt;/td&gt;&lt;td&gt;KFR &lt;/td&gt;&lt;td&gt;KMPUD WELL #2&lt;/td&gt;&lt;td&gt;WX&lt;/td&gt;&lt;td&gt;NA     &lt;/td&gt;&lt;td&gt;ALPS&lt;/td&gt;&lt;td&gt;⋯&lt;/td&gt;&lt;td&gt;2002-11-04&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;DCE11&lt;/td&gt;&lt;td&gt; 0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;0.500&lt;/td&gt;&lt;td&gt; 1.0&lt;/td&gt;&lt;td&gt;UG/L &lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;     &lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;6&lt;/th&gt;&lt;td&gt;Alpine&lt;/td&gt;&lt;td&gt;T0600300005&lt;/td&gt;&lt;td&gt;KMPUD#2&lt;/td&gt;&lt;td&gt;2002-10-31&lt;/td&gt;&lt;td&gt;1805&lt;/td&gt;&lt;td&gt;KFR &lt;/td&gt;&lt;td&gt;KMPUD WELL #2&lt;/td&gt;&lt;td&gt;WX&lt;/td&gt;&lt;td&gt;NA     &lt;/td&gt;&lt;td&gt;ALPS&lt;/td&gt;&lt;td&gt;⋯&lt;/td&gt;&lt;td&gt;2002-11-04&lt;/td&gt;&lt;td&gt;N&lt;/td&gt;&lt;td&gt;BZME &lt;/td&gt;&lt;td&gt; 0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;0.250&lt;/td&gt;&lt;td&gt; 0.5&lt;/td&gt;&lt;td&gt;UG/L &lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;     &lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;There&amp;rsquo;s 
&lt;a href=&#34;https://www.waterboards.ca.gov/ust/electronic_submittal/docs/edf_data_dict_2001.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt; about all of the fields, but we can already make sense of some of them. GLOBAL_ID represents a site, and FIELD_PT_NAME is a well. PARLABEL is the code for the name of the contaminant and PARVAL is the concentration reported. There&amp;rsquo;s also helpful QA/QC information, and the latitude and longitude of the wells are in a different file on the geotracker website. We&amp;rsquo;ll focus on one site with the most observations reported.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;library(dplyr)

alpine %&amp;gt;%
group_by(GLOBAL_ID) %&amp;gt;%
count() %&amp;gt;%
arrange(desc(n))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Attaching package: ‘dplyr’


The following objects are masked from ‘package:stats’:

    filter, lag


The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;A grouped_df: 7 × 2&lt;/caption&gt;
&lt;thead&gt;
	&lt;tr&gt;&lt;th scope=col&gt;GLOBAL_ID&lt;/th&gt;&lt;th scope=col&gt;n&lt;/th&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;int&amp;gt;&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;T0600300011&lt;/td&gt;&lt;td&gt;11764&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;T0600300005&lt;/td&gt;&lt;td&gt; 5776&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;T0600397314&lt;/td&gt;&lt;td&gt; 5131&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;T0600300013&lt;/td&gt;&lt;td&gt; 3780&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;T0600300007&lt;/td&gt;&lt;td&gt; 2145&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;T0600300008&lt;/td&gt;&lt;td&gt; 1532&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;           &lt;/td&gt;&lt;td&gt;    1&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Looks like &lt;code&gt;T0600300011&lt;/code&gt; is our site. Let&amp;rsquo;s try to see what the main chemicals of concern and their concentrations are.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;site &amp;lt;- alpine %&amp;gt;%
  filter(GLOBAL_ID == &amp;quot;T0600300011&amp;quot;)
site %&amp;gt;%
  group_by(PARLABEL) %&amp;gt;%
  tally(sort = TRUE) %&amp;gt;%
  head()
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;A tibble: 6 × 2&lt;/caption&gt;
&lt;thead&gt;
	&lt;tr&gt;&lt;th scope=col&gt;PARLABEL&lt;/th&gt;&lt;th scope=col&gt;n&lt;/th&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;int&amp;gt;&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;BZ         &lt;/td&gt;&lt;td&gt;260&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;BZME       &lt;/td&gt;&lt;td&gt;260&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;EBZ        &lt;/td&gt;&lt;td&gt;260&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;XYLENES1314&lt;/td&gt;&lt;td&gt;203&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;XYLO       &lt;/td&gt;&lt;td&gt;203&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;MTBE       &lt;/td&gt;&lt;td&gt;194&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The most results came from benzene (BZ), toluene (BZME), ethylbenzene (EBZ), xylene - isomers m &amp;amp; p (XYLENES1314), o-xylene (XYLO), and methyl-tert-butyl ether (MTBE). This is a hydrocarbon site. Now let&amp;rsquo;s try to see which wells are near the source area.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;top_wells &amp;lt;- site %&amp;gt;%
filter(PARLABEL %in% c(&amp;quot;BZ&amp;quot;, &amp;quot;BZME&amp;quot;, &amp;quot;EBZ&amp;quot;, &amp;quot;XYLENES1314&amp;quot;, &amp;quot;XYLO&amp;quot;, &amp;quot;MTBE&amp;quot;)) %&amp;gt;%
select(c(&amp;quot;FIELD_PT_NAME&amp;quot;, &amp;quot;LOGDATE&amp;quot;, &amp;quot;MATRIX&amp;quot;, &amp;quot;PARLABEL&amp;quot;, &amp;quot;PARVAL&amp;quot;, &amp;quot;PARVQ&amp;quot;, &amp;quot;LABDL&amp;quot;, &amp;quot;REPDL&amp;quot;, &amp;quot;UNITS&amp;quot;,)) %&amp;gt;%
group_by(FIELD_PT_NAME) %&amp;gt;%
tally(sort = TRUE) %&amp;gt;%
filter(n&amp;gt;100)

# the wells with the most data are:
top_wells
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;A tibble: 6 × 2&lt;/caption&gt;
&lt;thead&gt;
	&lt;tr&gt;&lt;th scope=col&gt;FIELD_PT_NAME&lt;/th&gt;&lt;th scope=col&gt;n&lt;/th&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;int&amp;gt;&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
	&lt;tr&gt;&lt;td&gt;MW-3&lt;/td&gt;&lt;td&gt;167&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;MW-2&lt;/td&gt;&lt;td&gt;161&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;MWA4&lt;/td&gt;&lt;td&gt;157&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;MW-1&lt;/td&gt;&lt;td&gt;155&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;MWA1&lt;/td&gt;&lt;td&gt;143&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;td&gt;MWA2&lt;/td&gt;&lt;td&gt;143&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The most sampled wells are MW-3, MW-2, MWA4, MW-1, MWA1, and MWA2. Naming conventions for wells can mean nothing or can mean a lot, and get wackier the longer a site has been around.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;site &amp;lt;- site %&amp;gt;%
  filter(FIELD_PT_NAME %in% top_wells$FIELD_PT_NAME) %&amp;gt;%
  filter(PARLABEL %in% c(&amp;quot;BZ&amp;quot;, &amp;quot;BZME&amp;quot;, &amp;quot;EBZ&amp;quot;, &amp;quot;XYLENES1314&amp;quot;, &amp;quot;XYLO&amp;quot;, &amp;quot;MTBE&amp;quot;)) %&amp;gt;%
  select(c(&amp;quot;FIELD_PT_NAME&amp;quot;, &amp;quot;LOGDATE&amp;quot;, &amp;quot;MATRIX&amp;quot;, &amp;quot;PARLABEL&amp;quot;, &amp;quot;PARVAL&amp;quot;, &amp;quot;PARVQ&amp;quot;, &amp;quot;LABDL&amp;quot;, &amp;quot;REPDL&amp;quot;, &amp;quot;UNITS&amp;quot;,)) 

head(site)
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;A data.frame: 6 × 9&lt;/caption&gt;
&lt;thead&gt;
	&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th scope=col&gt;FIELD_PT_NAME&lt;/th&gt;&lt;th scope=col&gt;LOGDATE&lt;/th&gt;&lt;th scope=col&gt;MATRIX&lt;/th&gt;&lt;th scope=col&gt;PARLABEL&lt;/th&gt;&lt;th scope=col&gt;PARVAL&lt;/th&gt;&lt;th scope=col&gt;PARVQ&lt;/th&gt;&lt;th scope=col&gt;LABDL&lt;/th&gt;&lt;th scope=col&gt;REPDL&lt;/th&gt;&lt;th scope=col&gt;UNITS&lt;/th&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;dbl&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;dbl&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;dbl&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;chr&amp;gt;&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
	&lt;tr&gt;&lt;th scope=row&gt;1&lt;/th&gt;&lt;td&gt;MW-1&lt;/td&gt;&lt;td&gt;2002-10-08&lt;/td&gt;&lt;td&gt;W&lt;/td&gt;&lt;td&gt;BZ  &lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;UG/L&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;2&lt;/th&gt;&lt;td&gt;MW-1&lt;/td&gt;&lt;td&gt;2003-09-08&lt;/td&gt;&lt;td&gt;W&lt;/td&gt;&lt;td&gt;BZ  &lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;UG/L&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;3&lt;/th&gt;&lt;td&gt;MW-1&lt;/td&gt;&lt;td&gt;2002-11-25&lt;/td&gt;&lt;td&gt;W&lt;/td&gt;&lt;td&gt;XYLO&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;UG/L&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;4&lt;/th&gt;&lt;td&gt;MW-1&lt;/td&gt;&lt;td&gt;2003-03-05&lt;/td&gt;&lt;td&gt;W&lt;/td&gt;&lt;td&gt;MTBE&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;UG/L&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;5&lt;/th&gt;&lt;td&gt;MW-1&lt;/td&gt;&lt;td&gt;2003-03-05&lt;/td&gt;&lt;td&gt;W&lt;/td&gt;&lt;td&gt;EBZ &lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;UG/L&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;6&lt;/th&gt;&lt;td&gt;MW-1&lt;/td&gt;&lt;td&gt;2003-03-05&lt;/td&gt;&lt;td&gt;W&lt;/td&gt;&lt;td&gt;EBZ &lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;td&gt;UG/L&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Let&#39;s take a closer look at the units. The first six observations are reported in &amp;mu;g/L, but are they all? &lt;/p&gt;
&lt;p&gt;First we&amp;rsquo;ll want to clean up the classes - the &lt;code&gt;FIELD_PT_NAME&lt;/code&gt; should be a factor and &lt;code&gt;LOGDATE&lt;/code&gt; should be a date.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;site$FIELD_PT_NAME &amp;lt;- as.factor(site$FIELD_PT_NAME)
site$LOGDATE &amp;lt;- as.Date(site$LOGDATE)
site$MATRIX &amp;lt;- as.factor(site$MATRIX)
site$PARLABEL &amp;lt;- as.factor(site$PARLABEL)
site$PARVQ &amp;lt;- as.factor(site$PARVQ)
site$UNITS &amp;lt;- as.factor(site$UNITS)
levels(site$PARLABEL) &amp;lt;- list(Benzene=&amp;quot;BZ&amp;quot;, Toluene=&amp;quot;BZME&amp;quot;, Ethylbenzene=&amp;quot;EBZ&amp;quot;, Xylenes_MP=&amp;quot;XYLENES1314&amp;quot;, Xylene_O=&amp;quot;XYLO&amp;quot;, MTBE=&amp;quot;MTBE&amp;quot;)

summary(site)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt; FIELD_PT_NAME    LOGDATE           MATRIX          PARLABEL  
 MW-1:155      Min.   :2002-07-11   W:926   Benzene     :179  
 MW-2:161      1st Qu.:2003-05-27           Toluene     :179  
 MW-3:167      Median :2004-05-05           Ethylbenzene:179  
 MWA1:143      Mean   :2005-11-06           Xylenes_MP  :132  
 MWA2:143      3rd Qu.:2008-05-05           Xylene_O    :132  
 MWA4:157      Max.   :2010-04-14           MTBE        :125  
     PARVAL        PARVQ        LABDL           REPDL         UNITS    
 Min.   :   0.00   = :135   Min.   :0.080   Min.   : 0.500   UG/L:926  
 1st Qu.:   0.00   ND:791   1st Qu.:0.380   1st Qu.: 0.500             
 Median :   0.00            Median :0.500   Median : 0.500             
 Mean   :  20.95            Mean   :1.909   Mean   : 3.568             
 3rd Qu.:   0.00            3rd Qu.:5.000   3rd Qu.: 5.000             
 Max.   :1150.00            Max.   :9.900   Max.   :50.000             
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Turns out that they &lt;i&gt;are&lt;/i&gt; all reported in &amp;mu;g/L, which is good, because that means the concentrations are probably fairly low - remember one &amp;mu;g/L is one part per &lt;i&gt;billion&lt;/i&gt;. This isn&#39;t always the case - be sure to keep an eye out for units and do conversions as necessary before working with the data. The PARVQ tells us if the chemical was detected in the sample or below the detection limit (ND). For 791 of the observations, the chemical was not detected in the sample, while in only 135 observations a true detected concentration is reported. In cases where the chemical is not detected, is NA, zero, the lab detection limit, report detection limit, or something else reported? &lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;site %&amp;gt;%
filter(PARVQ == &#39;ND&#39;) %&amp;gt;%
head()
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;A data.frame: 6 × 9&lt;/caption&gt;
&lt;thead&gt;
	&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th scope=col&gt;FIELD_PT_NAME&lt;/th&gt;&lt;th scope=col&gt;LOGDATE&lt;/th&gt;&lt;th scope=col&gt;MATRIX&lt;/th&gt;&lt;th scope=col&gt;PARLABEL&lt;/th&gt;&lt;th scope=col&gt;PARVAL&lt;/th&gt;&lt;th scope=col&gt;PARVQ&lt;/th&gt;&lt;th scope=col&gt;LABDL&lt;/th&gt;&lt;th scope=col&gt;REPDL&lt;/th&gt;&lt;th scope=col&gt;UNITS&lt;/th&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;fct&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;date&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;fct&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;fct&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;dbl&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;fct&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;dbl&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;dbl&amp;gt;&lt;/th&gt;&lt;th scope=col&gt;&amp;lt;fct&amp;gt;&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
	&lt;tr&gt;&lt;th scope=row&gt;1&lt;/th&gt;&lt;td&gt;MW-1&lt;/td&gt;&lt;td&gt;2002-10-08&lt;/td&gt;&lt;td&gt;W&lt;/td&gt;&lt;td&gt;Benzene     &lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;UG/L&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;2&lt;/th&gt;&lt;td&gt;MW-1&lt;/td&gt;&lt;td&gt;2003-09-08&lt;/td&gt;&lt;td&gt;W&lt;/td&gt;&lt;td&gt;Benzene     &lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;UG/L&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;3&lt;/th&gt;&lt;td&gt;MW-1&lt;/td&gt;&lt;td&gt;2002-11-25&lt;/td&gt;&lt;td&gt;W&lt;/td&gt;&lt;td&gt;Xylene_O    &lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;UG/L&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;4&lt;/th&gt;&lt;td&gt;MW-1&lt;/td&gt;&lt;td&gt;2003-03-05&lt;/td&gt;&lt;td&gt;W&lt;/td&gt;&lt;td&gt;MTBE        &lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;UG/L&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;5&lt;/th&gt;&lt;td&gt;MW-1&lt;/td&gt;&lt;td&gt;2003-03-05&lt;/td&gt;&lt;td&gt;W&lt;/td&gt;&lt;td&gt;Ethylbenzene&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;5.0&lt;/td&gt;&lt;td&gt;UG/L&lt;/td&gt;&lt;/tr&gt;
	&lt;tr&gt;&lt;th scope=row&gt;6&lt;/th&gt;&lt;td&gt;MW-1&lt;/td&gt;&lt;td&gt;2003-03-05&lt;/td&gt;&lt;td&gt;W&lt;/td&gt;&lt;td&gt;Ethylbenzene&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;ND&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;td&gt;UG/L&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It looks like the value reported for non-detected samples is zero. This can cause problems when analyzing the data statistically. Let&amp;rsquo;s visualize what these concentrations look like at MW-1.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;MW1 &amp;lt;- site %&amp;gt;%
filter(FIELD_PT_NAME == &amp;quot;MW-1&amp;quot;)

MW2 &amp;lt;- site %&amp;gt;%
filter(FIELD_PT_NAME == &amp;quot;MW-2&amp;quot;)

MW3 &amp;lt;- site %&amp;gt;%
filter(FIELD_PT_NAME == &amp;quot;MW-3&amp;quot;)

MWA1 &amp;lt;- site %&amp;gt;%
filter(FIELD_PT_NAME == &amp;quot;MWA1&amp;quot;)

MWA2 &amp;lt;- site %&amp;gt;%
filter(FIELD_PT_NAME == &amp;quot;MWA2&amp;quot;)

MWA4 &amp;lt;- site %&amp;gt;%
filter(FIELD_PT_NAME == &amp;quot;MWA4&amp;quot;)

library(ggplot2)

ggplot(MW1, aes(x = LOGDATE, y = PARVAL, color = PARLABEL)) + 
geom_line() + 
geom_point(alpha = 0.6) +
labs(title =&amp;quot;MW-1&amp;quot;, x =&amp;quot;Date&amp;quot;, y = &amp;quot;Concentration in ug/L&amp;quot;)

ggplot(MW2, aes(x = LOGDATE, y = PARVAL, color = PARLABEL)) + 
geom_line() + 
geom_point(alpha = 0.6) +
labs(title =&amp;quot;MW-2&amp;quot;, x =&amp;quot;Date&amp;quot;, y = &amp;quot;Concentration in ug/L&amp;quot;)

ggplot(MW3, aes(x = LOGDATE, y = PARVAL, color = PARLABEL)) + 
geom_line() + 
geom_point(alpha = 0.6) +
labs(title =&amp;quot;MW-3&amp;quot;, x =&amp;quot;Date&amp;quot;, y = &amp;quot;Concentration in ug/L&amp;quot;)

ggplot(MWA1, aes(x = LOGDATE, y = PARVAL, color = PARLABEL)) + 
geom_line() + 
geom_point(alpha = 0.6) +
labs(title =&amp;quot;MWA1&amp;quot;, x =&amp;quot;Date&amp;quot;, y = &amp;quot;Concentration in ug/L&amp;quot;)

ggplot(MWA2, aes(x = LOGDATE, y = PARVAL, color = PARLABEL)) + 
geom_line() + 
geom_point(alpha = 0.6) +
labs(title =&amp;quot;MWA2&amp;quot;, x =&amp;quot;Date&amp;quot;, y = &amp;quot;Concentration in ug/L&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_19_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./index_19_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./index_19_2.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./index_19_3.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./index_19_4.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;At these wells it looks like there were some spikes before 2004, but nothing much going on later. Let&amp;rsquo;s look at the last well from our selection - MWA4.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;ggplot(MWA4, aes(x = LOGDATE, y = PARVAL, color = PARLABEL)) + 
geom_line() + 
geom_point(alpha = 0.6) +
labs(title =&amp;quot;MWA4&amp;quot;, x =&amp;quot;Date&amp;quot;, y = &amp;quot;Concentration in ug/L&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_21_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;This one has a lot higher concentrations - take a look at the values on the y axis. Yikes! Let&amp;rsquo;s see what the 
&lt;a href=&#34;https://www.epa.gov/ground-water-and-drinking-water/national-primary-drinking-water-regulations&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EPA Maximum Contaminant Levels (MCLs)&lt;/a&gt; are for these chemicals.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;ggplot(MWA4, aes(x = LOGDATE, y = PARVAL, color = PARLABEL)) + 
geom_line() + 
geom_point(alpha = 0.6) +
labs(title =&amp;quot;MWA4&amp;quot;, x =&amp;quot;Date&amp;quot;, y = &amp;quot;Concentration in ug/L&amp;quot;) +
geom_hline(yintercept=5, linetype=&amp;quot;dashed&amp;quot;, color=&amp;quot;#F8766D&amp;quot;) +
geom_hline(yintercept=1000, linetype=&amp;quot;dashed&amp;quot;, color=&amp;quot;#B79F00&amp;quot;) +
geom_hline(yintercept=700, linetype=&amp;quot;dashed&amp;quot;, color=&amp;quot;#00BA38&amp;quot;) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_23_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;There is no MCL for MTBE (there are probably state guidelines) and the MCL for total xylenes is 10,000, which is off this chart. Benzene has the lowest MCL by far, and it is usually the chemical that drives cleanup. It&amp;rsquo;s a little hard for us to see it on this plot, so let&amp;rsquo;s zoom in some more.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;MWA4_benzene &amp;lt;- MWA4 %&amp;gt;%
filter(PARLABEL == &amp;quot;Benzene&amp;quot;)

ggplot(MWA4_benzene, aes(x = LOGDATE, y = PARVAL, color = &amp;quot;Benzene&amp;quot;,)) + 
geom_line() + 
geom_point(alpha = 0.6) +
labs(title =&amp;quot;MWA4&amp;quot;, x =&amp;quot;Date&amp;quot;, y = &amp;quot;Benzene Concentration in ug/L&amp;quot;) +
geom_hline(yintercept=5, linetype=&amp;quot;dashed&amp;quot;, color=&amp;quot;red&amp;quot;) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_25_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Around 2004 this well has almost seven times the MCL of benzene, but it quickly went down to non-detectable or very low for the rest of the recorded period. If I was especially interested in this site I would try to request some of the accompanying reports and perform a Mann-Kendall analysis of trends in the wells, but mostly I wanted to show how you can download data from Geotracker and manipulate it in R.&lt;/p&gt;
&lt;p&gt;This tutorial is done entirely in a jupyter notebook running an R kernal inside of a docker container. The source files are on github and if you have any questions about using jupyter or docker don&amp;rsquo;t hesitate to contact me!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Accessing Historical Weather Data with Dark Sky API</title>
      <link>/post/weather/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/weather/</guid>
      <description>


&lt;p&gt;In my IoT class last year with &lt;a href=&#34;https://soilcrop.agsci.colostate.edu/faculty-2/ham-jay/&#34;&gt;Jay Ham&lt;/a&gt; we used a website called &lt;a href=&#34;https://darksky.net/&#34;&gt;Dark Sky&lt;/a&gt; to get current weather conditions. I’ve been thinking about this recently, since I would like to see if I can match up weather conditions to the changes in the depth to water of wells at a site. I was inspired to look into this based on a talk from Jonathan Kennel from the Univesity of Guelph ( &lt;em&gt;Happy Canada Day!&lt;/em&gt; ) and several conversations with my advisor.&lt;/p&gt;
&lt;p&gt;I’ll walk through how I imported the data to R.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Dark Sky is a great resource, however, when I went to re-visit the website I found that they have joined Apple. This means they are no longer creating new accounts. Luckily I already had one from my class last fall. The API is still supported through at least the end of 2021. Later I’ll mention some ways that you could get similar (maybe better) data through other channels.&lt;/p&gt;
&lt;p&gt;The API allows up to 1000 calls per day for free. Using the &lt;em&gt;Time Machine&lt;/em&gt; you can request data from a certain date and location. I focused on hourly data, though it’s probably finer resolution than I need.&lt;/p&gt;
&lt;p&gt;“The &lt;code&gt;hourly&lt;/code&gt; data block will contain data points starting at midnight (local time) of the day requested, and continuing until midnight (local time) of the following day.”&lt;/p&gt;
&lt;p&gt;The docs include a sample API call, which includes your key, the location, and the date requested.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GET https://api.darksky.net/forecast/0123456789abcdef9876543210fedcba/42.3601,-71.0589,255657600?exclude=currently,flags&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A quick visit to my best friend stack overflow provided &lt;a href=&#34;https://stackoverflow.com/questions/46069322/r-api-call-for-json-data-and-converting-to-dataframe&#34;&gt;a little more clarity&lt;/a&gt; about how to use the API in R. The date is in UNIX format. I wanted to start at January 1, 2000, so I used a handy &lt;a href=&#34;https://www.unixtimestamp.com/&#34;&gt;UNIX converter&lt;/a&gt; to find my desired date number, 946684800. I replaced the url and now I’m ready to call the API.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#GET the url 
req &amp;lt;- httr::GET(&amp;quot;https://api.darksky.net/forecast/{key}/30.012188,-94.024525,946684800?exclude=currently,flags&amp;quot;)
req$status_code 
# should be 200 if it worked. If you get 400, something has gone wrong.

# extract req$content 
cont &amp;lt;- req$content

#Convert to char
char &amp;lt;- rawToChar(req$content)

#Convert to df 
df &amp;lt;- jsonlite::fromJSON(char)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It worked! I removed my private API key, so you’ll have to take my word for it. But now I have a new problem - the call only works for one day at a time. I want a lot of days, so I decided to write a loop.&lt;/p&gt;
&lt;p&gt;One thing I couldn’t get to work was changing the date inside the string for the API url. I posted in the R for Data Science Slack, and a few minutes later I learned a handy new trick - you can put a variable inside a string by just inserting it with quotes around the variable. Something like this:
&lt;code&gt;&amp;quot;https://api.darksky.net/forecast/{key}/30.012188,-94.024525,&amp;quot;,day,&amp;quot;?exclude=currently,flags&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Great! I ran the loop and it worked, kinda. It errored out after the first run because rbind could not combine two data frames with different numbers of columns. After looking at the next few days to see which columns were off I saw that it went from 15 to 16 to 17, then back down. Very annoying! They must have added some new info for some days, but this made the data inconsistent so I had to add a select function to the loop. I selected for the 15 columns that were consistent across all days and ran it again. Success!&lt;/p&gt;
&lt;p&gt;Here’s the code I ended up with:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)

#initialize all_hours so there&amp;#39;s something to rbind to
df &amp;lt;- jsonlite::fromJSON(paste0(&amp;quot;https://api.darksky.net/forecast/{key}/30.012188,-94.024525,946684800?exclude=currently,flags&amp;quot;))
all_hours &amp;lt;- df$hourly$data

# make a vector of unix dates I want (minus the first one, which I already put in all_hours)
unix_day &amp;lt;- seq(946771200, 1033084800, by=86400) 

for (day in unix_day){
  
df &amp;lt;- jsonlite::fromJSON(paste0(&amp;quot;https://api.darksky.net/forecast/{key}/30.012188,-94.024525,&amp;quot;,
day,
&amp;quot;?exclude=currently,flags&amp;quot;))

hourly &amp;lt;- select(df$hourly$data, c(cols))
                 
all_hours &amp;lt;- rbind(hourly, all_hours)}

#convert unix time to date
all_hours$time &amp;lt;- as.POSIXct(all_hours$time, origin=&amp;quot;1970-01-01&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I selected the columns I want and saved them as weather.csv. Let’s zoom in to two rainy days in May 2000.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
weather &amp;lt;- read.csv(&amp;quot;weather.csv&amp;quot;)
#weather &amp;lt;- weather[2810:2845,]

#convert unix time to date
weather$time &amp;lt;- as.POSIXct(weather$time, origin=&amp;quot;1970-01-01&amp;quot;)

ggplot(weather, aes(x = time, y = precipIntensity, group =1)) + 
  geom_point(alpha = 0.4, color = &amp;quot;blue&amp;quot;) +
  geom_line(alpha = 0.4, color = &amp;quot;blue&amp;quot;, size = 0.5) +
  theme_gray() +
  theme(axis.text.x=element_text(angle=90, hjust=1)) +
  labs(title =&amp;quot;Precipitation Over Time&amp;quot;, x = &amp;quot;Date&amp;quot;, y = &amp;quot;Precipitation in Inches&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/weather/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can clearly see the precipitation-generating storm events over a few months.&lt;/p&gt;
&lt;p&gt;It will take me a few days of using my 1000 free API calls to cover the period I’m interested in, but overall it was really easy.&lt;/p&gt;
&lt;hr /&gt;
&lt;div id=&#34;other-weather-options&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Other Weather Options&lt;/h2&gt;
&lt;p&gt;Clearly getting historical weather data for a certain location can be really useful, but since Dark Sky is no longer creating accounts it’s not a very practical resource.&lt;/p&gt;
&lt;p&gt;The helpful commenters on the R for Data Science Slack also suggested using &lt;a href=&#34;https://www.ncdc.noaa.gov/data-access/land-based-station-data&#34;&gt;NOAA&lt;/a&gt; to get the data. This is probably a more robust dataset anyway, but the downside is that they don’t have the option to use lat/long as a location - you have to pick from one of their existing stations. In my case there wasn’t one near the field site I was interested in, but they’re spread out across the country so I bet it will be a great source for a lot of people. There’s a good tutorial on accessing this data at &lt;a href=&#34;https://ropensci.org/tutorials/rnoaa_tutorial/&#34;&gt;R Open Sci&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I’ve also hear the &lt;a href=&#34;https://www.wunderground.com/pws/overview&#34;&gt;Weather Underground&lt;/a&gt; has a good API, but it looks like you need to contribute weather data with an IoT device to access it. Cool! But may not be useful to some.&lt;/p&gt;
&lt;p&gt;Are there any other sources of weather data that you know of? Do you have suggestions to improve the approach I used for the Dark Sky data?&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tidy Tuesday - African American History</title>
      <link>/post/2020-06-26-ttafamhistory/</link>
      <pubDate>Fri, 26 Jun 2020 21:13:14 -0500</pubDate>
      <guid>/post/2020-06-26-ttafamhistory/</guid>
      <description>


&lt;p&gt;If you’re not familiar with Tidy Tuesday, it is a weekly project hosted online by the R for data science community. Every Tuesday a new dataset is released and people are encouraged to explore, analyse, and visualize it in interesting ways. This is my first week exploring tidy tuesday data. Information about the project and datasets is at &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday&#34;&gt;the tidytuesday github&lt;/a&gt;. Before working with this data I watched Julia Silge’s excellent &lt;a href=&#34;https://juliasilge.com/blog/captive-africans-voyages/&#34;&gt;screencast&lt;/a&gt; and picked up some great ways to find missing values and recode data.&lt;/p&gt;
&lt;div id=&#34;a-little-history&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;A Little History&lt;/h2&gt;
&lt;p&gt;I learned a lot just by looking at the data provided. I was not previously aware of the history captured in the african_names dataset - which lists the names of enslaved people that were freed as they were being illegally smuggled to the Americas. The most names were recorded at the port of Freetown in Sierra Leone before making the trans-atlantic journey. Here’s the description of the dataset excepted on the tidytuesday github page:&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;During the last 60 years of the trans-Atlantic slave trade, courts around the Atlantic basins condemned over two thousand vessels for engaging in the traffic and recorded the details of captives found on board including their African names. The African Names Database was created from these records, now located in the Registers of Liberated Africans at the Sierra Leone National Archives, Freetown, as well as Series FO84, FO313, CO247 and CO267 held at the British National Archives in London. Links are provided to the ships in the Voyages Database from which the liberated Africans were rescued, as well as to the African Origins site where users can hear the names pronounced and help us identify the languages in which they think the names are used.&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;table&gt;
&lt;caption&gt;&lt;span id=&#34;tab:unnamed-chunk-2&#34;&gt;Table 1: &lt;/span&gt;Data summary&lt;/caption&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Name&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;african_names&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Number of rows&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;91490&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Number of columns&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;_______________________&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Column type frequency:&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;character&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;________________________&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Group variables&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Variable type: character&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;skim_variable&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_missing&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;complete_rate&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;min&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;max&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;empty&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_unique&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;whitespace&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;name&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;24&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;62330&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;gender&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12878&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.86&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;ship_name&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;443&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;port_disembark&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;port_embark&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1126&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.99&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;31&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;59&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;country_origin&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;79404&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.13&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;31&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;563&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Variable type: numeric&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;skim_variable&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_missing&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;complete_rate&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mean&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;sd&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p0&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p25&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p50&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p75&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p100&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;hist&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;id&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;62122.02&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51305.07&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;22935.25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;45822.5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;101263.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;199932&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;▇▆▃▁▂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;voyage_id&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17698.25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;82016.88&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;557.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2443.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2871.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3601.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;500082&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;▇▁▁▁▁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;age&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1126&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.99&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18.89&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8.60&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;20.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;26.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;77&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;▆▇▁▁▁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;height&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4820&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.95&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;58.61&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.84&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;54.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;60.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;64.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;85&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;▁▁▂▇▁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;year_arrival&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1831.40&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.52&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1808.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1826.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1832.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1837.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1862&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;▂▆▇▃▁&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 2
## # Groups:   port_disembark [5]
##   port_disembark          n
##   &amp;lt;chr&amp;gt;               &amp;lt;int&amp;gt;
## 1 Freetown            81009
## 2 Havana              10058
## 3 Bahamas unspecified   183
## 4 Kingston, Jamaica     144
## 5 St. Helena             96&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From this output we can see that &lt;code&gt;country_origin&lt;/code&gt; has the most missing data by far. There’s a clue about this in the description of the data above, which mentions the &lt;em&gt;African Origins site, where users can hear the names pronounced and help identify the languages in which they think the names are used&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;So the people who were liberated were from such different cultures that the original documentarians could not speak the same language or determine where they originally came from. We can see that about 81,000 people were freed in Freetown (This now makes sense - again learning lots here). About 10,000 people were freed in Havana, Cuba, and many less in other locations in the caribbean.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;age&lt;/code&gt; variable includes entries from a 6-month old child to a 77 year old person. The &lt;code&gt;gender&lt;/code&gt; variable has 12,878 missing values and 4 options. I’ll use some of the same techniques as Julia Silge to clean up this data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;african_names %&amp;gt;%
  group_by(port_disembark, year_arrival) %&amp;gt;%
  count() %&amp;gt;% 
  arrange(desc(year_arrival)) %&amp;gt;%
  ggplot(aes(x = year_arrival, y = n, color = port_disembark)) + geom_line(alpha = 0.6, size = 2) + geom_point(alpha = 0.6)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-06-26-ttAfAmhistory_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can see that the majority of liberations occured in Freetown. I wonder if the ships had stopped going to Freetown by 1849, or if there was less enforcement, or if they stopped being recorded. Similary, I wonder what the policies were in each of the other ports that made them free enslaved Africans for the time periods reflected in this data.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>


&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
  col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
  init.angle = -50, border = NA
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2015-07-23-r-rmarkdown_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
